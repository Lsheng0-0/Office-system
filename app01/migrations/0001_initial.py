# Generated by Django 4.2.7 on 2024-04-10 10:45

import app01.models
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('serial', models.IntegerField(help_text='序号', verbose_name='序号')),
                ('institution', models.CharField(help_text='机构', max_length=40, verbose_name='机构')),
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识', primary_key=True, serialize=False, unique=True, verbose_name='唯一标识')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_sign', models.BooleanField(default=True, help_text='激活', verbose_name='激活')),
            ],
            options={
                'verbose_name': '机构',
                'verbose_name_plural': '机构',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识', primary_key=True, serialize=False, unique=True, verbose_name='唯一标识')),
                ('name', models.CharField(help_text='单位名称', max_length=40, verbose_name='单位名称')),
                ('serial', models.IntegerField(help_text='单位序号', verbose_name='单位序号')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_sign', models.BooleanField(default=True, help_text='激活', verbose_name='激活')),
                ('institution', models.ForeignKey(limit_choices_to={'is_sign': True}, on_delete=django.db.models.deletion.CASCADE, to='app01.institution')),
            ],
            options={
                'verbose_name': '单位列表',
                'verbose_name_plural': '单位列表',
            },
        ),
        migrations.CreateModel(
            name='Forms',
            fields=[
                ('serial', models.IntegerField(help_text='表单序号', verbose_name='表单序号')),
                ('name', models.CharField(help_text='表单名称', max_length=40, verbose_name='表单名称')),
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识', primary_key=True, serialize=False, unique=True, verbose_name='唯一标识')),
                ('description', models.CharField(blank=True, help_text='表单描述', max_length=200, null=True, verbose_name='表单描述')),
                ('url', models.FileField(upload_to=app01.models.dynamic_form_path, verbose_name='表单路径')),
                ('type', models.SmallIntegerField(choices=[(0, '常设'), (1, '临时')], default=0, help_text='表单类型', verbose_name='表单类型')),
                ('status', models.SmallIntegerField(choices=[(0, '未发布'), (1, '已发布'), (2, '已删除')], default=0, help_text='表单状态', verbose_name='表单状态')),
                ('create_user', models.CharField(help_text='创建人', max_length=40, verbose_name='创建人')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('delete_time', models.DateTimeField(blank=True, help_text='删除时间', null=True, verbose_name='删除时间')),
                ('delete_user', models.CharField(blank=True, help_text='删除人', max_length=40, null=True, verbose_name='删除人')),
                ('is_sign', models.BooleanField(default=True, help_text='激活', verbose_name='激活')),
                ('unit', models.ForeignKey(limit_choices_to={'is_sign': True}, on_delete=django.db.models.deletion.CASCADE, to='app01.organization')),
            ],
            options={
                'verbose_name': '单位表单',
                'verbose_name_plural': '单位表单',
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='文件名', max_length=40, verbose_name='文件名')),
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识', unique=True, verbose_name='唯一标识')),
                ('url', models.FileField(upload_to=app01.models.dynamic_file_path, verbose_name='文件路径')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('is_sign', models.BooleanField(default=False, help_text='激活', verbose_name='激活')),
                ('upload_user', models.CharField(help_text='发送人', max_length=40, verbose_name='发送人')),
                ('upload_unit', models.CharField(help_text='发送单位', max_length=40, verbose_name='发送单位')),
                ('upload_department', models.CharField(blank=True, help_text='发送部门', max_length=40, null=True, verbose_name='发送部门')),
                ('download_user', models.CharField(blank=True, help_text='接收人', max_length=40, null=True, verbose_name='接收人')),
                ('status', models.BooleanField(default=False, help_text='接收状态', verbose_name='接收状态')),
                ('download_unit', models.ForeignKey(blank=True, help_text='接收单位', limit_choices_to={'is_sign': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='app01.organization', verbose_name='接收单位')),
                ('form_name', models.ForeignKey(help_text='表单名', limit_choices_to={'is_sign': True}, on_delete=django.db.models.deletion.CASCADE, to='app01.forms', verbose_name='表单名')),
            ],
            options={
                'verbose_name': '上传文件表',
                'verbose_name_plural': '上传文件表',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识', primary_key=True, serialize=False, unique=True, verbose_name='唯一标识')),
                ('name', models.CharField(help_text='部门名称', max_length=40, verbose_name='部门名称')),
                ('serial', models.IntegerField(help_text='部门序号', verbose_name='部门序号')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_sign', models.BooleanField(default=True, help_text='激活', verbose_name='激活')),
                ('unit', models.ForeignKey(limit_choices_to={'is_sign': True}, on_delete=django.db.models.deletion.CASCADE, to='app01.organization')),
            ],
            options={
                'verbose_name': '部门列表',
                'verbose_name_plural': '部门列表',
                'unique_together': {('unit', 'code')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, default=None, help_text='姓名', max_length=15, null=True, verbose_name='姓名')),
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, help_text='唯一标识', unique=True, verbose_name='唯一标识')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(1, '男'), (2, '女')], help_text='性别', null=True, verbose_name='性别')),
                ('permissions', models.BooleanField(blank=True, default=False, help_text='权限', verbose_name='权限')),
                ('is_sign', models.BooleanField(default=True, help_text='激活', verbose_name='激活')),
                ('department', models.ForeignKey(blank=True, help_text='部门', limit_choices_to={'is_sign': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='app01.department', verbose_name='部门')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'user',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
